#!/sbin/sh
#
# PRIME-Kernel installer zip.
#
# Thanks to Chainfire for some of the functions and logic!
#

OUTFD=$2
ZIP=$3

ui_print() {
  echo -n -e "ui_print $1\n" > /proc/self/fd/$OUTFD
  echo -n -e "ui_print\n" > /proc/self/fd/$OUTFD
}

sleep 2

ui_print " "
ui_print " "
ui_print "=============================="
ui_print "   PRIME-Kernel for Note4";
ui_print "=============================="
ui_print " "

ui_print " - Mounting /system and /data"
mount /system
mount -o rw,remount /system
mount -o rw,remount /system /system
mount /data
mount -o rw,remount /data
mount -o rw,remount /data /data

ui_print " - Extracting files"
cd /tmp
rm -rf prime_kernel
mkdir prime_kernel
cd prime_kernel
unzip -o "$ZIP"

if [ ! -f "/tmp/prime_kernel/script/pakage_list_system.txt" ]; then
  ui_print "! Failed: /tmp/prime_kernel/script/prime_kernel not found!"
  exit 1
else
  chmod 0755 /tmp/prime_kernel/script/*
fi



ui_print " - Checking environment"
bootloader=`getprop ro.bootloader`
variant=${bootloader:0:5}
check_variant="N910S N910K N910L N915S N915K N915L N916S N916K N916L"
VARIANT_PASS=0

for key in $check_variant
do
	[ $key == $variant ] && VARIANT_PASS=1
done
if [ $VARIANT_PASS -eq 0 ]; then
  ui_print "  !! error in determining device variant"
  ui_print "  !! try again in another recovery"
  exit 1
fi



ui_print " - Flashing boot image..."
ui_print "   DEVICE: $variant"
device_name=`echo $variant|awk '{print tolower($0)}'`
device=${device_name:0:4}
tar -Jxf ./bootimg.tar.xz $device-boot.img
ui_print "   FILE  : $device-boot.img"
TARGET_BLOCK=`readlink /dev/block/platform/*/by-name/BOOT`
[ -z $TARGET_BLOCK ] && TARGET_BLOCK="/dev/block/mmcblk0p9"
dd of=$TARGET_BLOCK if=/tmp/prime_kernel/$device-boot.img
rm bootimg.tar.xz $device-boot.img
sync


ui_print " - Extracting kernel modules..."
rm -rf /system/lib/modules
cp -rf ./system/* /system

ui_print " - Install Synapse..."
rm -rf /data/app/com.af.synapse-1/*
mkdir /data/app/com.af.synapse-1
chmod 0755 /data/app/com.af.synapse-1
cp -rf ./data/app/com.af.synapse-1/base.apk /data/app/com.af.synapse-1/base.apk
chmod 0644 data/app/com.af.synapse-1/base.apk
sync

ui_print " - Remove old data..."
if [ ! -e /data/media/0/Synapse/.do_not_remove_data ]; then
    rm -rf /data/data/com.af.synapse
    rm -rf /data/data/com.af.synapse-*
fi
rm -f /data/su.img
rm /system/xbin/uci
rm /system/etc/init.d/voltage
rm /system/etc/init.d/fix_overays
rm /system/etc/init.d/01stockrider_kernel
rm /system/etc/init.d-postboot/killapps
rm /system/etc/init.d-postboot/patch-GMS_Drain



ui_print " - Setup environment..."
if [ ! `grep "SYSTEMLESS" /data/.supersu` ]; then
    echo SYSTEMLESS=false>>/data/.supersu
else
    sed -i -e "s/SYSTEMLESS=.*/SYSTEMLESS=false/g" /data/.supersu
fi
mkdir /system/etc/init.d
chmod -R 0755 /data/PRIME-Kernel/*
chmod -R 0755 /system/etc/init.d
chown -R root.root /system/etc/init.d
chmod -R 0755 /system/etc/init.d-postboot
chown -R root.root /system/etc/init.d-postboot
PKG_SYSTEM=/data/media/0/Synapse/pakage_list_system.txt
PKG_GOOGLE=/data/media/0/Synapse/pakage_list_google.txt
cp -f /tmp/prime_kernel/script/pakage_list_system.txt $PKG_SYSTEM
cp -f /tmp/prime_kernel/script/pakage_list_google.txt $PKG_GOOGLE

ui_print " - Installing SuperSU..."
BASEDIR=$(dirname $ZIP)
if [ -f $BASEDIR/SuperSU.zip ];then
	ui_print "   Detected SuperSU.zip"
	ui_print "   Flashing SuperSU..."
	rm -rf /tmp/supersu
	mkdir /tmp/supersu
	unzip $BASEDIR/SuperSU.zip -d /tmp/supersu;
	chmod 0755 /tmp/supersu/META-INF/com/google/android/update-binary
	/tmp/supersu/META-INF/com/google/android/update-binary dummy 1 $BASEDIR/SuperSU.zip;
	sleep 5
	rm -rf /data/app/eu.chainfire.supersu-*
	mkdir -p /data/app/eu.chainfire.supersu-1
	chmod 0755 /data/app/eu.chainfire.supersu-1
	cp /tmp/supersu/common/Superuser.apk /data/app/eu.chainfire.supersu-1/base.apk
	chmod 0644 /data/app/eu.chainfire.supersu-1/base.apk
else
	ui_print "   Not detected SuperSU.zip"
fi
sync

ui_print " "

